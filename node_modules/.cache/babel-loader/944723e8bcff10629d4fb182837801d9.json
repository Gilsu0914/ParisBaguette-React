{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport userEvent from \"@testing-library/user-event\";\nlet cart = createSlice({\n  name: 'cart',\n  initialState: [],\n  reducers: {\n    addItem(state, action) {\n      state.push(action.payload);\n    },\n\n    addCount(state, action) {\n      let idSyncIndex = state.findIndex(state => {\n        return state.id === action.payload;\n      });\n      state[idSyncIndex].count += 1;\n      state[idSyncIndex].totalPrice += parseInt(state[idSyncIndex].price);\n    },\n\n    subtractCount(state, action) {\n      let idSyncIndex = state.findIndex(state => {\n        return state.id === action.payload;\n      });\n      state[idSyncIndex].count -= 1;\n      state[idSyncIndex].totalPrice -= state[idSyncIndex].price;\n    },\n\n    deleteItem(state, action) {\n      state.splice(0, 1);\n    },\n\n    showTotal(state, acition) {\n      state.totalPrice.reduce(function add(sum, currValue) {\n        return sum + currValue;\n      }, 0);\n    }\n\n  }\n});\nexport let {\n  addItem,\n  addCount,\n  subtractCount,\n  deleteItem,\n  showTotal\n} = cart.actions;\nexport default configureStore({\n  reducer: {\n    cart: cart.reducer\n  }\n}); // {\n//   id: `${idSynchro.id}`, //id: 1\n//   title: `${idSynchro.title}`, //title: 유기농야채고로케\n//   count: countNum, //count: 1\n//   price: `${idSynchro.price}` //price: 2600\n//   totalPrice: totalPrice //totalPrice: 2600\n//   perPiece: countNum\n// }\n//addCount든 subtractCount든 idSyncIndex는 어차피 let이 같은데... 바깥에다가 let 으로 선언해두고 쓸 수는 없을까?","map":{"version":3,"names":["configureStore","createSlice","userEvent","cart","name","initialState","reducers","addItem","state","action","push","payload","addCount","idSyncIndex","findIndex","id","count","totalPrice","parseInt","price","subtractCount","deleteItem","splice","showTotal","acition","reduce","add","sum","currValue","actions","reducer"],"sources":["/Users/bandicafe/Downloads/리액트장인/shopagain/src/store.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport userEvent from \"@testing-library/user-event\";\n\n\nlet cart = createSlice({\n  name : 'cart',  \n  initialState : [\n    \n  ],\n  reducers:{\n    addItem(state, action){\n      state.push(action.payload)\n    },\n    addCount(state, action){\n      let idSyncIndex = state.findIndex((state)=>{return state.id === action.payload })\n      state[idSyncIndex].count += 1;\n      state[idSyncIndex].totalPrice += parseInt(state[idSyncIndex].price);\n    },\n    subtractCount(state, action){\n      let idSyncIndex = state.findIndex((state)=>{return state.id === action.payload })\n      state[idSyncIndex].count -= 1;\n      state[idSyncIndex].totalPrice -= state[idSyncIndex].price;\n    },\n    deleteItem(state, action){\n      state.splice(0, 1)\n    },\n    showTotal(state,acition){\n     \n      state.totalPrice.reduce(function add(sum,currValue){\n        return sum + currValue;\n      }, 0)\n    }\n  }\n})\nexport let { addItem, addCount, subtractCount, deleteItem, showTotal } = cart.actions;\n\n\nexport default configureStore({\n  reducer:{\n    cart : cart.reducer,\n  }\n})\n\n\n// {\n//   id: `${idSynchro.id}`, //id: 1\n//   title: `${idSynchro.title}`, //title: 유기농야채고로케\n//   count: countNum, //count: 1\n//   price: `${idSynchro.price}` //price: 2600\n//   totalPrice: totalPrice //totalPrice: 2600\n\n//   perPiece: countNum\n// }\n\n//addCount든 subtractCount든 idSyncIndex는 어차피 let이 같은데... 바깥에다가 let 으로 선언해두고 쓸 수는 없을까?"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAGA,IAAIC,IAAI,GAAGF,WAAW,CAAC;EACrBG,IAAI,EAAG,MADc;EAErBC,YAAY,EAAG,EAFM;EAKrBC,QAAQ,EAAC;IACPC,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAe;MACpBD,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;IACD,CAHM;;IAIPC,QAAQ,CAACJ,KAAD,EAAQC,MAAR,EAAe;MACrB,IAAII,WAAW,GAAGL,KAAK,CAACM,SAAN,CAAiBN,KAAD,IAAS;QAAC,OAAOA,KAAK,CAACO,EAAN,KAAaN,MAAM,CAACE,OAA3B;MAAoC,CAA9D,CAAlB;MACAH,KAAK,CAACK,WAAD,CAAL,CAAmBG,KAAnB,IAA4B,CAA5B;MACAR,KAAK,CAACK,WAAD,CAAL,CAAmBI,UAAnB,IAAiCC,QAAQ,CAACV,KAAK,CAACK,WAAD,CAAL,CAAmBM,KAApB,CAAzC;IACD,CARM;;IASPC,aAAa,CAACZ,KAAD,EAAQC,MAAR,EAAe;MAC1B,IAAII,WAAW,GAAGL,KAAK,CAACM,SAAN,CAAiBN,KAAD,IAAS;QAAC,OAAOA,KAAK,CAACO,EAAN,KAAaN,MAAM,CAACE,OAA3B;MAAoC,CAA9D,CAAlB;MACAH,KAAK,CAACK,WAAD,CAAL,CAAmBG,KAAnB,IAA4B,CAA5B;MACAR,KAAK,CAACK,WAAD,CAAL,CAAmBI,UAAnB,IAAiCT,KAAK,CAACK,WAAD,CAAL,CAAmBM,KAApD;IACD,CAbM;;IAcPE,UAAU,CAACb,KAAD,EAAQC,MAAR,EAAe;MACvBD,KAAK,CAACc,MAAN,CAAa,CAAb,EAAgB,CAAhB;IACD,CAhBM;;IAiBPC,SAAS,CAACf,KAAD,EAAOgB,OAAP,EAAe;MAEtBhB,KAAK,CAACS,UAAN,CAAiBQ,MAAjB,CAAwB,SAASC,GAAT,CAAaC,GAAb,EAAiBC,SAAjB,EAA2B;QACjD,OAAOD,GAAG,GAAGC,SAAb;MACD,CAFD,EAEG,CAFH;IAGD;;EAtBM;AALY,CAAD,CAAtB;AA8BA,OAAO,IAAI;EAAErB,OAAF;EAAWK,QAAX;EAAqBQ,aAArB;EAAoCC,UAApC;EAAgDE;AAAhD,IAA8DpB,IAAI,CAAC0B,OAAvE;AAGP,eAAe7B,cAAc,CAAC;EAC5B8B,OAAO,EAAC;IACN3B,IAAI,EAAGA,IAAI,CAAC2B;EADN;AADoB,CAAD,CAA7B,C,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA"},"metadata":{},"sourceType":"module"}