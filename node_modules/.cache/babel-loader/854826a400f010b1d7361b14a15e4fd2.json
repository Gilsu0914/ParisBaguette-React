{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport userEvent from \"@testing-library/user-event\";\nlet cart = createSlice({\n  name: 'cart',\n  initialState: [],\n  reducers: {\n    addItem(state, action) {\n      state.push(action.payload);\n    },\n\n    addCount(state, action) {\n      let idSyncIndex = state.findIndex(state => {\n        return state.id === action.payload;\n      });\n      state[idSyncIndex].count += 1;\n    },\n\n    subtractCount(state, action) {\n      let idSyncIndex = state.findIndex(state => {\n        return state.id === action.payload;\n      });\n      state[idSyncIndex].count -= 1;\n      state[idSyncIndex].price -= state[idSyncIndex].price; //아냐, 갯수가 1개일때의 정가격을 모르잖아? 그러니까 0원이 되어버리지\n      //갯수가 하나 줄면 그만큼 가격도 정확하게 1개분량만큼 깍인 가격을 보여줘야하는데, 어떻게 코딩해야 하지?\n    }\n\n  }\n});\nexport let {\n  addItem,\n  addCount,\n  subtractCount\n} = cart.actions;\nexport default configureStore({\n  reducer: {\n    cart: cart.reducer\n  }\n}); //addCount든 subtractCount든 idSyncIndex는 어차피 let이 같은데... 바깥에다가 let 으로 선언해두고 쓸 수는 없을까?","map":{"version":3,"names":["configureStore","createSlice","userEvent","cart","name","initialState","reducers","addItem","state","action","push","payload","addCount","idSyncIndex","findIndex","id","count","subtractCount","price","actions","reducer"],"sources":["/Users/bandicafe/Downloads/리액트장인/shopagain/src/store.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport userEvent from \"@testing-library/user-event\";\n\n\nlet cart = createSlice({\n  name : 'cart',  \n  initialState : [\n    \n  ],\n  reducers:{\n    addItem(state, action){\n      state.push(action.payload)\n    },\n    addCount(state, action){\n      let idSyncIndex = state.findIndex((state)=>{return state.id === action.payload })\n      state[idSyncIndex].count += 1\n    },\n    subtractCount(state, action){\n      let idSyncIndex = state.findIndex((state)=>{return state.id === action.payload })\n      state[idSyncIndex].count -= 1\n      state[idSyncIndex].price -= state[idSyncIndex].price\n      //아냐, 갯수가 1개일때의 정가격을 모르잖아? 그러니까 0원이 되어버리지\n      //갯수가 하나 줄면 그만큼 가격도 정확하게 1개분량만큼 깍인 가격을 보여줘야하는데, 어떻게 코딩해야 하지?\n  }\n  }\n})\nexport let { addItem, addCount, subtractCount } = cart.actions;\n\n\nexport default configureStore({\n  reducer:{\n    cart : cart.reducer,\n  }\n})\n\n\n//addCount든 subtractCount든 idSyncIndex는 어차피 let이 같은데... 바깥에다가 let 으로 선언해두고 쓸 수는 없을까?"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAGA,IAAIC,IAAI,GAAGF,WAAW,CAAC;EACrBG,IAAI,EAAG,MADc;EAErBC,YAAY,EAAG,EAFM;EAKrBC,QAAQ,EAAC;IACPC,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAe;MACpBD,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;IACD,CAHM;;IAIPC,QAAQ,CAACJ,KAAD,EAAQC,MAAR,EAAe;MACrB,IAAII,WAAW,GAAGL,KAAK,CAACM,SAAN,CAAiBN,KAAD,IAAS;QAAC,OAAOA,KAAK,CAACO,EAAN,KAAaN,MAAM,CAACE,OAA3B;MAAoC,CAA9D,CAAlB;MACAH,KAAK,CAACK,WAAD,CAAL,CAAmBG,KAAnB,IAA4B,CAA5B;IACD,CAPM;;IAQPC,aAAa,CAACT,KAAD,EAAQC,MAAR,EAAe;MAC1B,IAAII,WAAW,GAAGL,KAAK,CAACM,SAAN,CAAiBN,KAAD,IAAS;QAAC,OAAOA,KAAK,CAACO,EAAN,KAAaN,MAAM,CAACE,OAA3B;MAAoC,CAA9D,CAAlB;MACAH,KAAK,CAACK,WAAD,CAAL,CAAmBG,KAAnB,IAA4B,CAA5B;MACAR,KAAK,CAACK,WAAD,CAAL,CAAmBK,KAAnB,IAA4BV,KAAK,CAACK,WAAD,CAAL,CAAmBK,KAA/C,CAH0B,CAI1B;MACA;IACH;;EAdQ;AALY,CAAD,CAAtB;AAsBA,OAAO,IAAI;EAAEX,OAAF;EAAWK,QAAX;EAAqBK;AAArB,IAAuCd,IAAI,CAACgB,OAAhD;AAGP,eAAenB,cAAc,CAAC;EAC5BoB,OAAO,EAAC;IACNjB,IAAI,EAAGA,IAAI,CAACiB;EADN;AADoB,CAAD,CAA7B,C,CAOA"},"metadata":{},"sourceType":"module"}